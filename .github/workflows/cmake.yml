name: CMake

on: [push]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest]
        os: [ubuntu-latest]
        build_type: [Release, Debug]

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install libglfw3-dev libassimp-dev
      if: runner.os == 'Linux'

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/dist

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --target install --config ${{ matrix.build_type }} -j$(nproc)

    - name: Upload Artifact
      if: matrix.build_type == 'Release'
      uses: actions/upload-artifact@v2
      with:
        name: marble-${{ runner.os }}
        path: ${{github.workspace}}/dist/
    
    - name: Upload Artifact
      if: matrix.build_type != 'Release'
      uses: actions/upload-artifact@v2
      with:
        name: marble-${{ runner.os }}-${{ matrix.build_type }}
        path: ${{github.workspace}}/dist/
